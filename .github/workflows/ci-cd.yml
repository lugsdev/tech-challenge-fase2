name: Fluxo padrão
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurar a versão automática
      - name: Set build version
        id: version
        run: |
          # Definir a versão base
          BASE_VERSION="1.0.0"

          # Obter o número da execução
          BUILD_NUMBER=${{ github.run_number }}

          # Gerar a nova versão
          NEW_VERSION="$BASE_VERSION-$BUILD_NUMBER"

          # Exportar a versão como variável de ambiente
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      # Instalar o .NET SDK para os testes
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' # Versão do .NET SDK

      # Restaurar dependências do .NET
      - name: Restore dependencies
        run: dotnet restore

      # Executar testes
      - name: Run unit tests
        run: dotnet test ContactManagement.Tests/ContactManagement.Tests.csproj --configuration Release
        continue-on-error: false

      - name: Test Database Connection
        env:
          DB_SERVER: fiap-lucas.database.windows.net
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "Testing database connection..."
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          export PATH="$PATH:/opt/mssql-tools/bin"
          sqlcmd -S $DB_SERVER -U $DB_USER -P $DB_PASSWORD -Q "SELECT 1" || echo "Connection failed!"



      # Login no Docker
      - name: Docker Login 
        uses: docker/login-action@v3.0.0
        with:
          username: 'zennbyte'
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construir e enviar a imagem Docker
      - name: Build and Push Docker images
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          tags: |
            zennbyte/api-contactmanager:${{ env.NEW_VERSION }}
          push: true
